--Array



---concat()

1. 두 배열 합치기
CODE
var hege = ["Cecilie", "Lone"];
var stale = ["Emil", "Tobias", "Linus"];

// 아래 답
var children = hege.concat(stale);

RESULT
Cecilie,Lone,Emil,Tobias,Linus

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_concat


2. 세 배열 합치기
CODE
var hege = ["Cecilie", "Lone"];
var stale = ["Emil", "Tobias", "Linus"];
var kai = ["Robin"];

// 아래 답
var children = hege.concat(stale,kai);

RESULT
Cecilie,Lone,Emil,Tobias,Linus,Robin

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_concat2







---every()

1. ages 의 모든 값이 18 이상인지 체크

CODE
var ages = [32, 33, 16, 40];

// 아래 답
function checkAdult(age) {
    return age >= 18;
}

ages.every(checkAdult);

RESULT
false

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_every


2. answer 의 값이 모두 같은지 체크

CODE
var survey = [
    { name: "Steve", answer: "Yes"},
    { name: "Jessica", answer: "Yes"},
    { name: "Peter", answer: "Yes"},
    { name: "Elaine", answer: "No"}
];
// 아래 답
function isSameAnswer(el,index,arr) {
    if (index === 0){
        return true;
    }
    else {
        return (el.answer === arr[index - 1].answer);
    }
}

survey.every(isSameAnswer);

RESULT
false

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_every3








---resverse()

1. 다음 배열 내의 값 순서 Reverse

CODE
var fruits = ["Banana", "Orange", "Apple", "Mango"];

// 밑에 답
fruits.reverse();

RESULT
Mango,Apple,Orange,Banana

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_reverse







---sort()

1. 다음 배열 내의 값 정렬

CODE
var fruits = ["Banana", "Orange", "Apple", "Mango"];

// 밑에 답
fruits.sort();

RESULT
Apple,Banana,Mango,Orange

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_sort


2. 오름차순 정렬

CODE
var points = [40, 100, 1, 5, 25, 10];

// 밑에 답
points.sort(function(a, b){return a-b});

RESULT
1,5,10,25,40,100

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_sort2


3. 가장 큰 값

CODE
var points = [40, 100, 1, 5, 25, 10];

// 밑에 답
points.sort(function(a, b){return b-a})[0];    // Sort the numbers in the array in descending order

RESULT
100

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_sort_high







---slice()

1. Orange, Lemon 선택

CODE
var fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];

// 밑에 답
var citrus = fruits.slice(1, 3);

RESULT
Orange,Lemon

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_slice_array


2. 음수 파라미터를 이용하여 Lemon, Apple 선택

CODE
var fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];

// 밑에 답
var myBest = fruits.slice(-3, -1);

RESULT
Lemon,Apple

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_slice_array2





---splice()

1. Lemon, Kiwi 를 두 번째 인덱스에 추가

CODE
var fruits = ["Banana", "Orange", "Apple", "Mango"];

// 밑에 답
fruits.splice(2, 0, "Lemon", "Kiwi");

RESULT
Banana,Orange,Lemon,Kiwi,Apple,Mango

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_splice




2. Apple, Mango 제거

CODE
var fruits = ["Banana", "Orange", "Apple", "Mango", "Kiwi"];

// 밑에 답
fruits.splice(2, 2);

RESULT
Banana,Orange,Kiwi

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_splice2






---indexOf()

1. Apple 찾기

CODE
var fruits = ["Banana", "Orange", "Apple", "Mango"];

// 밑에 답
fruits.indexOf("Apple");

RESULT
2

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_indexof_array




2. 네 번째 위치에서 시작하여 Apple 찾기

CODE
var fruits = ["Banana", "Orange", "Apple", "Mango", "Banana", "Orange", "Apple"];

// 밑에 답
fruits.indexOf("Apple", 4);

RESULT
6

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_indexof_array2










---lastIndexOf()

1. 마지막부터 시작하여 Apple 찾기

CODE
var fruits = ["Banana", "Orange", "Apple", "Mango", "Banana", "Orange", "Apple"];

// 밑에 답
fruits.lastIndexOf("Apple");

RESULT
6

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_lastindexof_array2


2. 마지막 4번째부터 시작하여 Apple 찾기

CODE
var fruits = ["Banana", "Orange", "Apple", "Mango", "Banana", "Orange", "Apple"];

// 밑에 답
fruits.lastIndexOf("Apple", 4);

RESULT
2

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_lastindexof_array3






---filter()

1. age 배열에서 18 이상인 값만 필터

CODE
var ages = [32, 33, 16, 40];

// 밑에 답
function checkAdult(age) {
    return age >= 18;
}

ages.filter(checkAdult);

RESULT
32,33,40

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_filter







---forEach()

1. sum 변수에 numbers 배열의 값 모두 더하여 넣기

CODE
var sum = 0;
var numbers = [65, 44, 12, 4];

// 밑에 답
function myFunction(item) {
    sum += item;
}

numbers.forEach(myFunction)

RESULT
125

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_foreach2






---map()

1. 배열 값들의 제곱근 구하기

CODE
var numbers = [4, 9, 16, 25];

// 밑에 답
numbers.map(Math.sqrt);

RESULT
2,3,4,5

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_map


2. fullname 구하기

CODE
var persons = [
    {firstname : "Malcom", lastname: "Reynolds"},
    {firstname : "Kaylee", lastname: "Frye"},
    {firstname : "Jayne", lastname: "Cobb"}
];

// 밑에 답
function getFullName(item,index) {
    var fullname = [item.firstname,item.lastname].join(" ");
    return fullname;
}

persons.map(getFullName);

RESULT
Malcom Reynolds,Kaylee Frye,Jayne Cobb

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_map3








---some()

1. ages 에서 18 이상인 값이 하나라도 있는가?

CODE
var ages = [3, 10, 18, 20];

// 밑에 답
function checkAdult(age) {
    return age >= 18;
}

ages.some(checkAdult);

RESULT
true

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_some







---reduce()
1. 배열의 모든 값 더하기

CODE
var numbers = [65, 44, 12, 4];

// 밑에 답
function getSum(total, num) {
    return total + num;
}
numbers.reduce(getSum);

RESULT
125

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_reduce












--Date

---now()
1. 1970/1/1 부터 현재까지 지난 년도 구하기

CODE

// 밑에 답
var minutes = 1000 * 60;
var hours = minutes * 60;
var days = hours * 24;
var years = days * 365;
var t = Date.now();

var y = Math.round(t / years);


RESULT
47

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_now2






---UTC()
1. 2012/2/30 을 로컬 시간 대신 UTC 시간 구하기

CODE
var d = new Date(Date.UTC(2012,02,30));

RESULT
Fri Mar 30 2012 09:00:00 GMT+0900 (KST)

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_utc2













--String

---charAt()

1. 마지막 글자 가져오기

CODE
var str = "HELLO WORLD";

// 아래 답
str.charAt(str.length-1);

RESULT
D

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_charat2





---substr()
1. 1부터 4개의 문자열

CODE
var str = "Hello world!";

// 아래 답
str.substr(1, 4)

RESULT
ellO

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_substr



2. 2부터 나머지 전체 문자열

Code
var str = "Hello world!";

// 아래 답
str.substr(2);

RESULT
llo world!






---substring()

1. 1부터 4까지의 문자열

CODE
var str = "Hello world!";

// 아래 답
str.substring(1, 4);

RESULT
ell

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_substring







---trim()
1. 공백, 엔터, 탭 제거

CODE
var str = "       Hello World!\t\n";
str.trim();

RESULT
Hello World!

TRY URL
http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_trim









---split()
1. Monkey 제거

CODE
var str = "Apple,Lemon,Monkey,Orange";

// 밑에 답
var arr = str.split(",");
arr.splice(arr.indexOf("Monkey"), 1);
arr.join(",");

RESULT
Apple,Lemon,Orange


TRY URL
없음










---DOM


---노드 조작
1. childNodes 목록 마지막에 노드 추가

var someNode = document.getElementById('#mainBottomServiceMap');
someNode.appendChild(document.createElement('div'));
//위와 동일
someNode.insertBefore(someNode.firstChild.cloneNode(true), null);


2. Documentfragment로 한번에 문서트리에 추가하기

var d = document.createDocumentFragment();
d.appendChild(document.getElementsByTagName("LI")[0]);
d.childNodes[0].childNodes[0].childNodes[2].childNodes[0].nodeValue = "쥬니어 네이버"
document.getElementById("mainBottomServiceMap").appendChild(d);



--- event : contextmenu
1. 커스텀 contextMenu

var menu = document.querySelector('#contextmenu');//우클릭시 보여줄 메뉴 요소
var menuArea = document.querySelector('.serviceMap');//커스텀 메뉴를 보여줄 영역, 페이지 전체로 하려면 document.body

menuArea.addEventListener('contextmenu', function (event) {//커스텀 메뉴를 보여줄 영역에 이벤트 리스너 추가
    event.preventDefault();//원래 기본 메뉴를 보이지 않게 함

    menu.style.left = event.clientX + "px";//커스텀 메뉴가 나타날 좌표를 커스텀 메뉴 요소에 설정
    menu.style.top = event.clientY + "px";
    menu.style.visibility= "visible";//커스텀 메뉴 요소를 보이게 함

});

document.addEventListener('click', function () {//좌클릭 했을 때 커스텀 메뉴를 사라지게 함
menu.style.visibility = 'hidden';
});
